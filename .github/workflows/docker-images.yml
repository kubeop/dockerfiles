name: Docker Image CI

on:
  schedule:
    - cron: "0 0 * * 0"
  push:
    branches:
      - main
    paths:
      - 'library/**'
      - '.github/workflows/*'

jobs:
  build-os-images:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        images:
          - {name: "alpine", tag: "3.20", args: ""}
          - {name: "alpine", tag: "3.21", args: ""}
          - {name: "debian", tag: "12", args: ""}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DKH_USERNAME }}
        password: ${{ secrets.DKH_PASSWORD }}

    - name: Login to ACR
      uses: docker/login-action@v3
      with:
        registry: registry.cn-hangzhou.aliyuncs.com
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Set args
      run: |
        if [[ "${{ matrix.images.args }}" != "" ]]; then
            echo "tag=${{ matrix.images.tag }}-${{ matrix.images.args }}" >> $GITHUB_ENV
            echo "file=Dockerfile.${{ matrix.images.args }}" >> $GITHUB_ENV
        else
            echo "tag=${{ matrix.images.tag }}" >> $GITHUB_ENV
            echo "file=Dockerfile" >> $GITHUB_ENV
        fi

    - name: Build and Push images
      uses: docker/build-push-action@v6
      with:
        platforms: linux/amd64,linux/arm64
        context: library/${{ matrix.images.name }}/${{ matrix.images.tag }}
        file: library/${{ matrix.images.name }}/${{ matrix.images.tag }}/${{ env.file }}
        push: true
        tags: |
          kubeop/${{ matrix.images.name }}:${{ env.tag }}
          registry.cn-hangzhou.aliyuncs.com/kubeop/${{ matrix.images.name }}:${{ env.tag }}

  build-base-images:
    needs:
      - build-os-images
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        images:
          - {name: "golang", tag: "1.23.6", args: ""}
          - {name: "golang", tag: "1.24.0", args: ""}
          - {name: "openjdk", tag: "8", args: "jdk"}
          - {name: "openjdk", tag: "8", args: "jre"}
          - {name: "openjdk", tag: "11", args: "jdk"}
          - {name: "openjdk", tag: "11", args: "jre"}
          - {name: "openjdk", tag: "17", args: "jdk"}
          - {name: "openjdk", tag: "17", args: "jre"}
          - {name: "openjdk", tag: "21", args: "jdk"}
          - {name: "openjdk", tag: "21", args: "jre"}
          - {name: "docker", tag: "27.5.1", args: ""}
          - {name: "docker", tag: "28.0.1", args: ""}
          - {name: "kubectl", tag: "v1.30.10", args: ""}
          - {name: "kubectl", tag: "v1.32.2", args: ""}
          - {name: "kubedog", tag: "0.13.0", args: ""}
          - {name: "nginx", tag: "1.26.3", args: ""}
          - {name: "nginx", tag: "1.27.4", args: ""}
          - {name: "nodejs", tag: "18.20.7", args: ""}
          - {name: "nodejs", tag: "20.18.3", args: ""}
          - {name: "nodejs", tag: "22.14.0", args: ""}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DKH_USERNAME }}
        password: ${{ secrets.DKH_PASSWORD }}

    - name: Login to ACR
      uses: docker/login-action@v3
      with:
        registry: registry.cn-hangzhou.aliyuncs.com
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Set args
      run: |
        if [[ "${{ matrix.images.args }}" != "" ]]; then
            echo "tag=${{ matrix.images.tag }}-${{ matrix.images.args }}" >> $GITHUB_ENV
            echo "file=Dockerfile.${{ matrix.images.args }}" >> $GITHUB_ENV
        else
            echo "tag=${{ matrix.images.tag }}" >> $GITHUB_ENV
            echo "file=Dockerfile" >> $GITHUB_ENV
        fi

    - name: Build and Push images
      uses: docker/build-push-action@v6
      with:
        platforms: linux/amd64,linux/arm64
        context: library/${{ matrix.images.name }}/${{ matrix.images.tag }}
        file: library/${{ matrix.images.name }}/${{ matrix.images.tag }}/${{ env.file }}
        push: true
        tags: |
          kubeop/${{ matrix.images.name }}:${{ env.tag }}
          registry.cn-hangzhou.aliyuncs.com/kubeop/${{ matrix.images.name }}:${{ env.tag }}

  build-app-images:
    needs:
      - build-os-images
      - build-base-images
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        images:
          - {name: "python", tag: "3.11.11", args: ""}
          - {name: "python", tag: "3.12.9", args: ""}
          - {name: "python", tag: "3.13.2", args: ""}
          - {name: "jenkins", tag: "2.492.1", args: ""}
          - {name: "maven", tag: "3.9.9", args: "java8"}
          - {name: "maven", tag: "3.9.9", args: "java11"}
          - {name: "gradle", tag: "8.12.1", args: "java8"}
          - {name: "gradle", tag: "8.12.1", args: "java11"}
          - {name: "tomcat", tag: "9.0.100", args: ""}
          - {name: "tomcat", tag: "10.1.36", args: ""}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DKH_USERNAME }}
        password: ${{ secrets.DKH_PASSWORD }}

    - name: Login to ACR
      uses: docker/login-action@v3
      with:
        registry: registry.cn-hangzhou.aliyuncs.com
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Set args
      run: |
        if [[ "${{ matrix.images.args }}" != "" ]]; then
            echo "tag=${{ matrix.images.tag }}-${{ matrix.images.args }}" >> $GITHUB_ENV
            echo "file=Dockerfile.${{ matrix.images.args }}" >> $GITHUB_ENV
        else
            echo "tag=${{ matrix.images.tag }}" >> $GITHUB_ENV
            echo "file=Dockerfile" >> $GITHUB_ENV
        fi

    - name: Build and Push images
      uses: docker/build-push-action@v6
      with:
        platforms: linux/amd64,linux/arm64
        context: library/${{ matrix.images.name }}/${{ matrix.images.tag }}
        file: library/${{ matrix.images.name }}/${{ matrix.images.tag }}/${{ env.file }}
        push: true
        tags: |
          kubeop/${{ matrix.images.name }}:${{ env.tag }}
          registry.cn-hangzhou.aliyuncs.com/kubeop/${{ matrix.images.name }}:${{ env.tag }}

  python-apps:
    needs:
      - build-app-images
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        images:
          - {name: "ansible", tag: "2.16.14", args: ""}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DKH_USERNAME }}
        password: ${{ secrets.DKH_PASSWORD }}

    - name: Login to ACR
      uses: docker/login-action@v3
      with:
        registry: registry.cn-hangzhou.aliyuncs.com
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Set args
      run: |
        if [[ "${{ matrix.images.args }}" != "" ]]; then
            echo "tag=${{ matrix.images.tag }}-${{ matrix.images.args }}" >> $GITHUB_ENV
            echo "file=Dockerfile.${{ matrix.images.args }}" >> $GITHUB_ENV
        else
            echo "tag=${{ matrix.images.tag }}" >> $GITHUB_ENV
            echo "file=Dockerfile" >> $GITHUB_ENV
        fi

    - name: Build and Push images
      uses: docker/build-push-action@v6
      with:
        platforms: linux/amd64,linux/arm64
        context: library/${{ matrix.images.name }}/${{ matrix.images.tag }}
        file: library/${{ matrix.images.name }}/${{ matrix.images.tag }}/${{ env.file }}
        push: true
        tags: |
          kubeop/${{ matrix.images.name }}:${{ env.tag }}
          registry.cn-hangzhou.aliyuncs.com/kubeop/${{ matrix.images.name }}:${{ env.tag }}
