---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: jenkins
  namespace: infra
  labels:
    app.kubernetes.io/name: "jenkins"
    app.kubernetes.io/component: "jenkins-controller"
spec:
  serviceName: "jenkins"
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: "jenkins"
      app.kubernetes.io/component: "jenkins-controller"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "jenkins"
        app.kubernetes.io/component: "jenkins-controller"
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: role
                operator: In
                values:
                - jenkins
      serviceAccountName: "jenkins"
      enableServiceLinks: false
      imagePullSecrets:
        - name: hubsecret
      initContainers:
      - name: hack
        image: registry.cn-hangzhou.aliyuncs.com/kubeop/jenkins:2.492.3
        imagePullPolicy: Always
        securityContext:
          runAsGroup: 0
          runAsUser: 0
        command:
        - /bin/bash
        - -c
        - chown -R 1000:1000 ${JENKINS_HOME}
        volumeMounts:
        - name: jenkins-data
          mountPath: /data/jenkins
      - name: init
        image: registry.cn-hangzhou.aliyuncs.com/kubeop/jenkins:2.492.3
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          runAsGroup: 1000
          runAsUser: 1000
        command:
        - /bin/bash
        - -ec
        - |
          echo "disable Setup Wizard"
          # Prevent Setup Wizard when JCasC is enabled
          echo ${JENKINS_VERSION} > ${JENKINS_HOME}/jenkins.install.UpgradeWizard.state
          echo ${JENKINS_VERSION} > ${JENKINS_HOME}/jenkins.install.InstallUtil.lastExecVersion
          echo "download plugins"
          jenkins-plugin-cli --war /usr/share/jenkins/jenkins.war -f /usr/share/jenkins/ref/plugins.txt --plugin-download-directory ${JENKINS_HOME}/plugins --verbose;
        volumeMounts:
        - name: jenkins-data
          mountPath: /data/jenkins
      containers:
      - name: jenkins
        image: registry.cn-hangzhou.aliyuncs.com/kubeop/jenkins:2.492.3
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          runAsGroup: 1000
          runAsUser: 1000
        args: [ "--httpPort=8080"]
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: JAVA_OPTS
            value: "-Xms8192m -Xmx8192m -Dcasc.reload.token=$(POD_NAME) -Dfile.encoding=utf-8 -Duser.timezone=GMT+08 -Duser.country=CN"
          - name: JENKINS_OPTS
            value: ""
          - name: JENKINS_SLAVE_AGENT_PORT
            value: "50000"
          - name: CASC_JENKINS_CONFIG
            value: /data/jenkins/casc_configs
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 50000
          name: agent-listener
          protocol: TCP
        resources:
          limits:
            cpu: 8
            memory: 16Gi
          requests:
            cpu: 8
            memory: 16Gi
        startupProbe:
          failureThreshold: 12
          httpGet:
            path: '/login'
            port: http
          initialDelaySeconds: 40
          periodSeconds: 10
          timeoutSeconds: 5
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: '/login'
            port: http
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: '/login'
            port: http
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 5
        volumeMounts:
        - name: jenkins-jcasc-config
          mountPath: /data/jenkins/casc_configs
        - name: admin-secret
          mountPath: /run/secrets/admin-username
          subPath: jenkins-admin-user
          readOnly: true
        - name: admin-secret
          mountPath: /run/secrets/admin-password
          subPath: jenkins-admin-password
          readOnly: true
        - name: tmp-volume
          mountPath: /tmp
        - name: jenkins-data
          mountPath: /data/jenkins
      - name: config-reload
        image: registry.cn-hangzhou.aliyuncs.com/devops-system/k8s-sidecar:1.30.2
        imagePullPolicy: IfNotPresent
        securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: LABEL
            value: "jenkins-config"
          - name: FOLDER
            value: "/data/jenkins/casc_configs"
          - name: NAMESPACE
            value: 'infra'
          - name: REQ_URL
            value: "http://localhost:8080/reload-configuration-as-code/?casc-reload-token=$(POD_NAME)"
          - name: REQ_METHOD
            value: "POST"
          - name: REQ_RETRY_CONNECT
            value: "10"
        volumeMounts:
        - name: jenkins-jcasc-config
          mountPath: /data/jenkins/casc_configs
        - name: jenkins-data
          mountPath: /data/jenkins
      volumes:
        - name: jenkins-jcasc-config
          emptyDir: {}
        - name: admin-secret
          secret:
            secretName: jenkins
        - name: tmp-volume
          emptyDir: {}
        - name: jenkins-data
          persistentVolumeClaim:
            claimName: jenkins
