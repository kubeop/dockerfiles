---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nexus3
  labels:
    app.kubernetes.io/name: nexus3
spec:
  replicas: 1
  serviceName: nexus3
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: nexus3
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nexus3
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - worker-001
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - nexus3
            topologyKey: "kubernetes.io/hostname"
      initContainers:
      - name: volume-mount-hack
        image: registry.cn-hangzhou.aliyuncs.com/kubeop/alpine:3.22
        command:
        - sh
        - -c
        - chown -R 200:200 /nexus-data
        volumeMounts:
        - name: data
          mountPath: /nexus-data
      containers:
      - name: nexus3
        image: registry.cn-hangzhou.aliyuncs.com/devops-system/nexus3:3.84.0
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsUser: 200
        ports:
        - containerPort: 8081
          name: nexus3
        env:
        # CREATE USER nexus WITH PASSWORD 'password';
        # CREATE DATABASE nexus OWNER nexus;
        # GRANT ALL PRIVILEGES ON DATABASE nexus TO nexus;
        - name: DB_HOST
          value: "postgres.database.svc.cluster.local"
        - name: DB_NAME
          value: "nexus"
        - name: DB_USER
          value: "nexus"
        - name: DB_PASSWORD
          value: "password"
        - name: NEXUS_SECURITY_INITIAL_PASSWORD
          value: "admin"
        - name: NEXUS_SECURITY_RANDOMPASSWORD
          value: "false"
        - name: NEXUS_SEARCH_INDEX_REBUILD_ON_STARTUP
          value: "true"
        - name: INSTALL4J_ADD_VM_PARAMS
          value: "-Xms2703m -Xmx2703m \
              -Dnexus.datastore.clustered.enabled=false \
              -Djava.util.prefs.userRoot=${NEXUS_DATA}/javaprefs \
              -Dnexus.datastore.nexus.jdbcUrl=jdbc:postgresql://${DB_HOST}:5432/${DB_NAME} \
              -Dnexus.datastore.nexus.username=${DB_USER} \
              -Dnexus.datastore.nexus.password=${DB_PASSWORD}"
        resources:
          requests:
            cpu: "4"
            memory: 8Gi
          limits:
            cpu: "4"
            memory: 8Gi
        livenessProbe:
          tcpSocket:
            port: 8081
          initialDelaySeconds: 20
          timeoutSeconds: 5
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: 8081
          initialDelaySeconds: 20
          timeoutSeconds: 5
          periodSeconds: 10
        volumeMounts:
        - name: data
          mountPath: /nexus-data
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      storageClassName: nexus
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 100Gi
---
apiVersion: v1
kind: Service
metadata:
  name: nexus3
spec:
  ports:
  - port: 8081
  selector:
    app.kubernetes.io/name: nexus3
