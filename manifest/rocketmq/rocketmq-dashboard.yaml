---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  name: rocketmq-dashboard
spec:
  ingressClassName: nginx
  rules:
  - host: rocketmq-dashboard.kubeop.com
    http:
      paths:
        - pathType: Prefix
          path: /
          backend:
            service:
              name: rocketmq-dashboard
              port:
                number: 8080
  tls:
  - hosts:
    - rocketmq-dashboard.kubeop.com
    secretName: kubeop.com-ssl
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rocketmq-dashboard
  labels:
    app.kubernetes.io/name: dashboard
    app.kubernetes.io/instance: rocketmq
data:
  users.properties: |
    admin=admin,1
    user1=user1
    user2=user2
  role-permission.yml: |
    rolePerms:
      ordinary:
        - /rocketmq/*.query
        - /ops/*.query
        - /dashboard/*.query
        - /topic/*.query
        - /topic/sendTopicMessage.do
        - /topic/list.queryTopicType
        - /producer/*.query
        - /message/*.query
        - /messageTrace/*.query
        - /monitor/*.query
        - /consumer/*.query
        - /cluster/*.query
        - /dlqMessage/*.query
        - /dlqMessage/exportDlqMessage.do
        - /dlqMessage/batchResendDlqMessage.do
        - /acl/*.query
---
apiVersion: v1
kind: Service
metadata:
  name: rocketmq-dashboard
  labels:
    app.kubernetes.io/name: dashboard
    app.kubernetes.io/instance: rocketmq
spec:
  clusterIP: None
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: dashboard
  selector:
    app.kubernetes.io/name: dashboard
    app.kubernetes.io/instance: rocketmq
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rocketmq-dashboard
  labels:
    app.kubernetes.io/name: dashboard
    app.kubernetes.io/instance: rocketmq
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: dashboard
      app.kubernetes.io/instance: rocketmq
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: dashboard
        app.kubernetes.io/instance: rocketmq
    spec:
      containers:
      - env:
        - name: JAVA_OPTS
          value: >-
            -XX:MaxHeapSize=256M -Drocketmq.namesrv.addr=rocketmq-nameserver:9876
            -Drocketmq.config.loginRequired=true
            -Drocketmq.config.dataPath=/rocketmq-dashboard/config
        image: registry.cn-hangzhou.aliyuncs.com/devops-system/rocketmq-dashboard:2.1.0
        imagePullPolicy: IfNotPresent
        name: dashboard
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 6
          httpGet:
            path: /
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: "1"
            memory: 2Gi
          requests:
            cpu: 20m
            memory: 512Mi
        volumeMounts:
        - name: dashboard-user
          mountPath: /rocketmq-dashboard/config/users.properties
          subPath: users.properties
        - name: dashboard-role
          mountPath: /rocketmq-dashboard/config/role-permission.yml
          subPath: role-permission.yml
      volumes:
      - name: dashboard-user
        configMap:
          name: rocketmq-dashboard
          items:
          - key: users.properties
            path: users.properties
      - name: dashboard-role
        configMap:
          name: rocketmq-dashboard
          items:
          - key: role-permission.yml
            path: role-permission.yml
